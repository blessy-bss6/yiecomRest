# Generated by Django 4.0.3 on 2022-03-23 12:29

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_login', models.CharField(blank=True, max_length=180, null=True)),
                ('user_nicename', models.CharField(blank=True, max_length=180, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='emailaddress')),
                ('user_url', models.CharField(blank=True, max_length=180, null=True)),
                ('user_registered', models.DateTimeField(default=datetime.date.today, verbose_name='date_joined')),
                ('user_activationKey', models.CharField(blank=True, max_length=180, null=True)),
                ('user_status', models.IntegerField(blank=True, null=True)),
                ('displayname', models.CharField(blank=True, max_length=180, null=True)),
                ('change_pw', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Accounts',
                'verbose_name_plural': 'Acconts',
                'ordering': ('id',),
            },
        ),
    ]
